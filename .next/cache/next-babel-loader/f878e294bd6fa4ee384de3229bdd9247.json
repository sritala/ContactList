{"ast":null,"code":"var _jsxFileName = \"/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Dialog.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '1rem'\n  },\n  item: {},\n  ul: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem'\n  },\n  dialog: {\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  open: {\n    width: 320,\n    marginTop: '1rem'\n  },\n  box: {\n    textAlign: 'center'\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingTop: '1rem',\n    paddingBottom: '3rem'\n  }\n}));\nconst Transition = forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }));\n});\nexport default function FullScreenDialog({\n  list,\n  currentValues\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [updatedList, setUpdatedList] = React.useState(list);\n  const [values, setValues] = React.useState(currentValues);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    setUpdatedList([...updatedList, values]);\n  };\n\n  const handleDelete = values => {\n    setupdatedList(list.filter(values => values !== values));\n  };\n\n  if (list.length === 0) return __jsx(React.Fragment, null, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    disabled: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, \"Show Contacts\")));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"Show Contacts\")), __jsx(Dialog, {\n    className: classes.dialog,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: {\n      color: '#575757'\n    },\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  })))), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    style: {\n      color: '#575757'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, \"My Contacts\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, list.map(values => {\n    return __jsx(\"ul\", {\n      className: classes.ul,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"standard-multiline-flexible\",\n      label: \"First name\",\n      value: values.firstName,\n      name: 'firstName',\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"standard-textarea\",\n      label: \"Last name\",\n      value: values.lastName,\n      name: 'lastName',\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"standard-textarea\",\n      label: \"Email\",\n      value: values.email,\n      name: 'email',\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    })), __jsx(Button, {\n      onClick: () => handleDelete(values),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Remove\")));\n  })))), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 180,\n      height: '3rem'\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  }, \"Save\")))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Dialog.tsx"],"names":["React","forwardRef","makeStyles","Button","Dialog","List","AppBar","Toolbar","IconButton","Typography","TextField","Grid","CloseIcon","Box","Slide","useStyles","theme","appBar","position","title","textAlign","padding","item","ul","paddingTop","display","justifyContent","listStyle","paddingLeft","paddingRight","paddingBottom","dialog","maxWidth","height","open","width","marginTop","box","buttons","flexDirection","Transition","props","ref","FullScreenDialog","list","currentValues","classes","setOpen","useState","updatedList","setUpdatedList","values","setValues","handleClickOpen","handleClose","handleChange","event","target","name","value","handleOnSubmit","preventDefault","handleDelete","setupdatedList","filter","length","color","map","firstName","lastName","email"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,MAAMC,SAAS,GAAGb,UAAU,CAACc,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAD6B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAC,QADL;AAELC,IAAAA,OAAO,EAAE;AAFJ,GAJ8B;AAQrCC,EAAAA,IAAI,EAAC,EARgC;AAWrCC,EAAAA,EAAE,EAAC;AACDC,IAAAA,UAAU,EAAE,EADX;AAEDC,IAAAA,OAAO,EAAE,MAFR;AAGDC,IAAAA,cAAc,EAAE,QAHf;AAIDC,IAAAA,SAAS,EAAE,MAJV;AAKDC,IAAAA,WAAW,EAAE,MALZ;AAMDC,IAAAA,YAAY,EAAE,MANb;AAODC,IAAAA,aAAa,EAAE;AAPd,GAXkC;AAoBrCC,EAAAA,MAAM,EAAC;AACLC,IAAAA,QAAQ,EAAE,MADL;AAELC,IAAAA,MAAM,EAAE,MAFH;AAGLR,IAAAA,OAAO,EAAE,MAHJ;AAILC,IAAAA,cAAc,EAAC;AAJV,GApB8B;AA0BrCQ,EAAAA,IAAI,EAAC;AACHC,IAAAA,KAAK,EAAE,GADJ;AAEHC,IAAAA,SAAS,EAAC;AAFP,GA1BgC;AA+BrCC,EAAAA,GAAG,EAAC;AACFjB,IAAAA,SAAS,EAAE;AADT,GA/BiC;AAmCpCkB,EAAAA,OAAO,EAAC;AACPb,IAAAA,OAAO,EAAE,MADF;AAEPc,IAAAA,aAAa,EAAE,KAFR;AAGPb,IAAAA,cAAc,EAAC,QAHR;AAIPF,IAAAA,UAAU,EAAC,MAJJ;AAKPM,IAAAA,aAAa,EAAC;AALP;AAnC4B,CAAL,CAAN,CAA5B;AA6CA,MAAMU,UAAgD,GAAGvC,UAAU,CAAC,SAASuC,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAClG,SAAO,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkE,CAAnE;AAWA,eAAe,SAASE,gBAAT,CAA0B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA1B,EAA0D;AACvE,QAAMC,OAAO,GAAG/B,SAAS,EAAzB;AACA,QAAM,CAACmB,IAAD,EAAOa,OAAP,IAAkB/C,KAAK,CAACgD,QAAN,CAAe,KAAf,CAAxB;AAEA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAiClD,KAAK,CAACgD,QAAN,CAAeJ,IAAf,CAAvC;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBpD,KAAK,CAACgD,QAAN,CAAeH,aAAf,CAA5B;;AAEA,QAAMQ,eAAe,GAAG,MAAM;AAC5BN,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACxBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMQ,YAAY,GAAGC,KAAK,IAAI;AAC5BJ,IAAAA,SAAS,mBACJD,MADI;AAEP,OAACK,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF3B,OAAT;AAID,GALD;;AAOA,QAAMC,cAAc,GAAIJ,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACK,cAAN;AACAX,IAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBE,MAAjB,CAAD,CAAd;AACC,GAHH;;AAKE,QAAMW,YAAY,GAAIX,MAAD,IAAY;AAC/BY,IAAAA,cAAc,CAACnB,IAAI,CAACoB,MAAL,CAAYb,MAAM,IAAIA,MAAM,KAAKA,MAAjC,CAAD,CAAd;AACA,GAFF;;AAIF,MAAIP,IAAI,CAACqB,MAAL,KAAgB,CAApB,EACA,OACE,4BACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEnB,OAAO,CAACT,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAE;AAAC6B,MAAAA,KAAK,EAAE;AAAR,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEpB,OAAO,CAACZ,IAA3B;AAAiC,IAAA,QAAQ,EAAE,IAA3C;AAAiD,IAAA,OAAO,EAAC,UAAzD;AAAoE,IAAA,KAAK,EAAC,SAA1E;AAAoF,IAAA,OAAO,EAAEmB,eAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF,CADF;AAWA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEP,OAAO,CAACT,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAE;AAAC6B,MAAAA,KAAK,EAAE;AAAR,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEpB,OAAO,CAACZ,IAA3B;AAAiC,IAAA,OAAO,EAAC,UAAzC;AAAoD,IAAA,KAAK,EAAC,SAA1D;AAAoE,IAAA,OAAO,EAAEmB,eAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,CADF,EAOE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEP,OAAO,CAACf,MAA3B;AAAmC,IAAA,IAAI,EAAEG,IAAzC;AAA+C,IAAA,OAAO,EAAEoB,WAAxD;AAAqE,IAAA,mBAAmB,EAAEd,UAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAEM,OAAO,CAAC7B,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACiD,MAAAA,KAAK,EAAE;AAAR,KAAnB;AAAuC,IAAA,IAAI,EAAC,OAA5C;AAAoD,IAAA,KAAK,EAAC,SAA1D;AAAoE,IAAA,OAAO,EAAEZ,WAA7E;AAA0F,kBAAW,OAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADF,CADF,EAQE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,IAAA,QAAQ,EAAEM,cAAhB;AAAgC,IAAA,UAAU,MAA1C;AAA2C,IAAA,YAAY,EAAC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEd,OAAO,CAAC3B,KAA5C;AAAmD,IAAA,KAAK,EAAE;AAAC+C,MAAAA,KAAK,EAAE;AAAR,KAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,EAIA,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKtB,IAAI,CAACuB,GAAL,CAAUhB,MAAD,IAAY;AACpB,WACE;AAAI,MAAA,SAAS,EAAEL,OAAO,CAACvB,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,IAAZ;AAAkB,MAAA,SAAS,EAAEuB,OAAO,CAACxB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AACA,MAAA,EAAE,EAAC,6BADH;AAEA,MAAA,KAAK,EAAC,YAFN;AAGA,MAAA,KAAK,EAAE6B,MAAM,CAACiB,SAHd;AAIA,MAAA,IAAI,EAAE,WAJN;AAKA,MAAA,QAAQ,EAAEb,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,EAUA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,IAAZ;AAAkB,MAAA,SAAS,EAAET,OAAO,CAACxB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,SAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,KAAK,EAAE6B,MAAM,CAACkB,QAHhB;AAIE,MAAA,IAAI,EAAE,UAJR;AAKE,MAAA,QAAQ,EAAEd,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAVA,EAmBA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAE,IAAZ;AAAkB,MAAA,SAAS,EAAET,OAAO,CAACxB,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,SAAD;AACE,MAAA,EAAE,EAAC,mBADL;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,KAAK,EAAE6B,MAAM,CAACmB,KAHhB;AAIE,MAAA,IAAI,EAAE,OAJR;AAKE,MAAA,QAAQ,EAAEf,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAnBA,EA4BA,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMO,YAAY,CAACX,MAAD,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA5BA,CADF,CADF;AAkCD,GAnCA,CADL,CAJA,CADA,CARF,EAsDE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAE,IAAjB;AAAuB,IAAA,OAAO,EAAE,CAAhC;AAAmC,IAAA,SAAS,EAAEL,OAAO,CAACR,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAE,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAK,EAAC,GAAP;AAAYF,MAAAA,MAAM,EAAE;AAApB,KAAf;AAA2C,IAAA,OAAO,EAAC,WAAnD;AAAgE,IAAA,KAAK,EAAC,SAAtE;AAA+E,IAAA,IAAI,EAAC,QAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CAtDF,CAPF,CADF;AAsED","sourcesContent":["import React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\n\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    textAlign:'center',\n    padding: '1rem',\n  },\n  item:{\n\n  },\n  ul:{\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem',\n  },\n  dialog:{\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent:'center'\n  },\n  open:{\n    width: 320,\n    marginTop:'1rem'\n\n  },\n  box:{\n    textAlign: 'center',\n \n  },\n   buttons:{\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent:'center',\n    paddingTop:'1rem',\n    paddingBottom:'3rem',  \n  },\n\n}));\n\nconst Transition: React.ComponentType<TransitionProps> = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface OwnProps {\n  list: any[];\n  currentValues: any;\n}\n\ntype Props = OwnProps; \n\nexport default function FullScreenDialog({ list, currentValues }: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const [updatedList, setUpdatedList] =  React.useState(list);\n  const [values, setValues] = React.useState(currentValues);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    } as any);\n  };\n\n  const handleOnSubmit = (event) => {\n    event.preventDefault()\n    setUpdatedList([...updatedList, values])\n    }\n\n    const handleDelete = (values) => {\n      setupdatedList(list.filter(values => values !== values));\n     };\n\n  if (list.length === 0) \n  return(\n    <>\n      <Box className={classes.box}>\n        <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} disabled={true} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Show Contacts\n        </Button>\n        </Box>\n    </>\n  ); \n\n  return (\n    <div>\n      <Box className={classes.box}>\n        <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n         Show Contacts\n        </Button>\n      </Box>\n      <Dialog className={classes.dialog} open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton style={{color: '#575757'}} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <List>\n        <form onSubmit={handleOnSubmit} noValidate autoComplete=\"off\">\n        <Typography variant=\"h6\" className={classes.title} style={{color: '#575757'}}>\n          My Contacts\n        </Typography>\n        <Typography variant={'h6'}>\n            {list.map((values) => {\n              return (\n                <ul className={classes.ul}>\n                  <li>\n                  <Grid item={true} className={classes.item}>\n                    <TextField\n                    id=\"standard-multiline-flexible\"\n                    label=\"First name\"\n                    value={values.firstName}\n                    name={'firstName'}\n                    onChange={handleChange}\n                    />\n                  </Grid>\n                  <Grid item={true} className={classes.item} >\n                  <TextField\n                    id=\"standard-textarea\"\n                    label=\"Last name\"\n                    value={values.lastName}\n                    name={'lastName'}\n                    onChange={handleChange}\n                  />\n                  </Grid>\n                  <Grid item={true} className={classes.item}>\n                  <TextField\n                    id=\"standard-textarea\"\n                    label=\"Email\"\n                    value={values.email}\n                    name={'email'}\n                    onChange={handleChange}\n                  />\n                  </Grid>\n                  <Button onClick={() => handleDelete(values)}>Remove</Button>\n                  </li>\n                </ul>\n              );\n            }\n            )}\n          </Typography>\n          </form>\n        </List>\n        <Grid container={true} spacing={1} className={classes.buttons}>\n          <Grid item={true}>\n            <Button style={{width:180, height: '3rem'}}variant=\"contained\"  color=\"primary\"type=\"submit\">Save</Button>\n          </Grid>\n        </Grid>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}