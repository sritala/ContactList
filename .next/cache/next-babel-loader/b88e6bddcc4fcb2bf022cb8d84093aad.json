{"ast":null,"code":"var _jsxFileName = \"/Users/susannaritala/Documents/workspace/exercise/exercise/src/pages/components/ui/form.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nlet initialInformation = {\n  firstName: '',\n  lastName: '',\n  email: ''\n}; //initialInformation = initialInformation.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\");\n\nexport default function () {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    }\n  }));\n  const classes = useStyles();\n  const [values, setValues] = React.useState(initialInformation);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    setList([...list, values]);\n  };\n\n  return __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"First name\",\n    value: values.firstName,\n    onChange: handleChange,\n    name: 'firstName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Last name\",\n    placeholder: \"Placeholder\",\n    value: values.lastName,\n    onChange: handleChange,\n    name: 'lastName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Email\",\n    placeholder: \"Placeholder\",\n    value: values.email,\n    onChange: handleChange,\n    name: 'email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), __jsx(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"save\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, list.map(i => {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \" onClick=\", JSON.stringify(i), \"} }\"));\n  }))));\n}","map":{"version":3,"sources":["/Users/susannaritala/Documents/workspace/exercise/exercise/src/pages/components/ui/form.tsx"],"names":["React","useState","makeStyles","TextField","Button","Typography","initialInformation","firstName","lastName","email","useStyles","theme","root","margin","spacing","width","classes","values","setValues","list","setList","handleChange","event","target","name","value","handleOnSubmit","preventDefault","map","i","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\n\nlet initialInformation = {\n    firstName: '',\n    lastName: '',\n    email: ''\n}\n\n//initialInformation = initialInformation.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\");\n\nexport default function () {\n\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n          },\n        },\n      }));\n      \n    const classes = useStyles();\n\n    const [values, setValues] = React.useState(initialInformation);\n    const [list, setList] = useState([])\n\n    const handleChange = event => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        } as any);\n\n    };\n\n    const handleOnSubmit = (event) => {\n      event.preventDefault()\n      setList([...list, values])\n      }\n\n    return ( \n        <form onSubmit={handleOnSubmit} className={classes.root} noValidate autoComplete=\"off\">\n        <div>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"First name\"\n            value={values.firstName}\n            onChange={handleChange}\n            name={'firstName'}\n          />\n          <TextField\n            id=\"standard-textarea\"\n            label=\"Last name\"\n            placeholder=\"Placeholder\"\n            value={values.lastName}\n            onChange={handleChange}\n            name={'lastName'}\n          />\n           <TextField\n            id=\"standard-textarea\"\n            label=\"Email\"\n            placeholder=\"Placeholder\"\n            value={values.email}\n            onChange={handleChange}\n            name={'email'}\n          />\n          <Button type=\"submit\">save</Button>\n          <Typography variant={'h6'}>\n            {list.map((i) => {\n              return (\n                <li>\n                  <Button> onClick={JSON.stringify(i)}} }</Button>\n                </li>\n              );\n            }\n            )}\n          </Typography>\n        </div>\n      </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}