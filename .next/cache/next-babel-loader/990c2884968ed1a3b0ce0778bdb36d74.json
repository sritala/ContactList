{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Dialog.tsx\";\nvar __jsx = React.createElement;\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Persons from './';\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '1rem'\n  },\n  item: {},\n  ul: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem'\n  },\n  dialog: {\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  open: {\n    width: 320,\n    marginTop: '1rem'\n  },\n  box: {\n    textAlign: 'center'\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingTop: '1rem',\n    paddingBottom: '3rem'\n  },\n  delete: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingTop: '1rem'\n  }\n}));\nconst Transition = forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n});\nexport default function FullScreenDialog({\n  persons\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (persons.length === 0) return __jsx(React.Fragment, null, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    disabled: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \"Show Contacts\")));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"Show Contacts\")), __jsx(Dialog, {\n    className: classes.dialog,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: {\n      color: '#575757'\n    },\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    style: {\n      color: '#575757'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"My Contacts\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, persons.map(values => {\n    return __jsx(Persons, {\n      persons: contactsToShow,\n      onDelete: deletePerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    });\n  })))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Dialog.tsx"],"names":["React","forwardRef","makeStyles","Button","Dialog","List","AppBar","Toolbar","IconButton","Typography","CloseIcon","Box","Persons","Slide","useStyles","theme","appBar","position","title","textAlign","padding","item","ul","paddingTop","display","justifyContent","listStyle","paddingLeft","paddingRight","paddingBottom","dialog","maxWidth","height","open","width","marginTop","box","buttons","flexDirection","delete","Transition","props","ref","FullScreenDialog","persons","classes","setOpen","useState","handleClickOpen","handleClose","length","color","map","values","contactsToShow","deletePerson"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Persons from './'\n\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    textAlign:'center',\n    padding: '1rem',\n  },\n  item:{\n\n  },\n  ul:{\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem',\n  },\n  dialog:{\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent:'center'\n  },\n  open:{\n    width: 320,\n    marginTop:'1rem'\n\n  },\n  box:{\n    textAlign: 'center',\n \n  },\n   buttons:{\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent:'center',\n    paddingTop:'1rem',\n    paddingBottom:'3rem',  \n  },\n  delete: {\n    display: 'flex',\n    justifyContent:'flex-end',\n    paddingTop:'1rem',\n  },\n\n}));\n\nconst Transition: React.ComponentType<TransitionProps> = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface OwnProps {\n  persons: any[];\n \n}\n\ntype Props = OwnProps; \n\nexport default function FullScreenDialog({ persons }: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  if (persons.length === 0) \n  return(\n    <>\n      <Box className={classes.box}>\n        <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} disabled={true} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Show Contacts\n        </Button>\n        </Box>\n    </>\n  ); \n\n  return (\n    <div>\n      <Box className={classes.box}>\n        <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n         Show Contacts\n        </Button>\n      </Box>\n\n      <Dialog className={classes.dialog} open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton style={{color: '#575757'}} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <List>\n    \n        <Typography variant=\"h6\" className={classes.title} style={{color: '#575757'}}>\n          My Contacts\n        </Typography>\n        <Typography variant={'h6'}>\n            {persons.map((values) => {\n              return (\n                <Persons\n                persons={contactsToShow}\n                onDelete={deletePerson}\n                />\n              );\n            }\n            )}\n          </Typography>\n        </List>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}