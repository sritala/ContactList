{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Dialog.tsx\";\nvar __jsx = React.createElement;\nimport React, { forwardRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Persons from './Persons';\nimport personService from '../services/persons';\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '1rem'\n  },\n  item: {},\n  ul: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem'\n  },\n  dialog: {\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  open: {\n    width: 320,\n    marginTop: '1rem'\n  },\n  box: {\n    textAlign: 'center'\n  },\n  buttons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    paddingTop: '1rem',\n    paddingBottom: '3rem'\n  },\n  delete: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    paddingTop: '1rem'\n  }\n}));\nconst Transition = forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }));\n});\nexport default function SimpleDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const {\n    0: searchName,\n    1: setSearchName\n  } = useState('');\n  const {\n    0: showAll,\n    1: setShowAll\n  } = useState(true);\n  const {\n    0: persons,\n    1: setPersons\n  } = useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deletePerson = id => {\n    personService.remove(id).then(() => {\n      const updatedPersons = persons.filter(p => p.id !== id);\n      setPersons(updatedPersons);\n    });\n  };\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  };\n\n  const contactsToShow = showAll ? persons : persons.filter(person => {\n    let toFilter = person.name.toLocaleLowerCase();\n    let toSearch = searchName.toLowerCase();\n    return toFilter.includes(toSearch);\n  });\n  if (persons.length === 0) return __jsx(React.Fragment, null, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    disabled: true,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"Show Contacts\")));\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, \"Show Contacts\")), __jsx(Dialog, {\n    className: classes.dialog,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    style: {\n      color: '#575757'\n    },\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  })))), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    style: {\n      color: '#575757'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, \"My Contacts\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144\n    },\n    __self: this\n  }, persons.map(values => {\n    return __jsx(Persons, {\n      persons: contactsToShow,\n      onDelete: deletePerson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    });\n  })))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Dialog.tsx"],"names":["React","forwardRef","useState","makeStyles","Button","Dialog","List","AppBar","Toolbar","IconButton","Typography","CloseIcon","Box","Persons","personService","Slide","useStyles","theme","appBar","position","title","textAlign","padding","item","ul","paddingTop","display","justifyContent","listStyle","paddingLeft","paddingRight","paddingBottom","dialog","maxWidth","height","open","width","marginTop","box","buttons","flexDirection","delete","Transition","props","ref","SimpleDialog","classes","setOpen","searchName","setSearchName","showAll","setShowAll","persons","setPersons","handleClickOpen","handleClose","deletePerson","id","remove","then","updatedPersons","filter","p","handleSearchName","event","target","value","contactsToShow","person","toFilter","name","toLocaleLowerCase","toSearch","toLowerCase","includes","length","color","map","values"],"mappings":"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","sourcesContent":["import React, { forwardRef, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Box from '@material-ui/core/Box';\nimport Persons from './Persons';\nimport personService from '../services/persons';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    textAlign:'center',\n    padding: '1rem',\n  },\n  item:{\n\n  },\n  ul:{\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem',\n  },\n  dialog:{\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent:'center'\n  },\n  open:{\n    width: 320,\n    marginTop:'1rem'\n\n  },\n  box:{\n    textAlign: 'center',\n \n  },\n   buttons:{\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent:'center',\n    paddingTop:'1rem',\n    paddingBottom:'3rem',  \n  },\n  delete: {\n    display: 'flex',\n    justifyContent:'flex-end',\n    paddingTop:'1rem',\n  },\n\n}));\n\nconst Transition: React.ComponentType<TransitionProps> = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\nexport default function SimpleDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [searchName, setSearchName] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [persons, setPersons] = useState([]);\n\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const deletePerson = id => {\n    personService\n      .remove(id)\n      .then(() => {\n        const updatedPersons = persons.filter(p => p.id !== id);\n        setPersons(updatedPersons);\n      })\n  }\n  \n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  }\n\n  const contactsToShow = showAll\n  ? persons\n  : persons.filter(person => {\n      let toFilter = person.name.toLocaleLowerCase();\n      let toSearch = searchName.toLowerCase()\n      return toFilter.includes(toSearch);\n    });\n\n  if (persons.length === 0) \n  return(\n    <>\n      <Box className={classes.box}>\n        <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} disabled={true} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Show Contacts\n        </Button>\n        </Box>\n    </>\n  ); \n\n  return (\n    <div>\n      <Box className={classes.box}>\n        <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n         Show Contacts\n        </Button>\n      </Box>\n\n      <Dialog className={classes.dialog} open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton style={{color: '#575757'}} edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <List>\n    \n        <Typography variant=\"h6\" className={classes.title} style={{color: '#575757'}}>\n          My Contacts\n        </Typography>\n        <Typography variant={'h6'}>\n            {persons.map((values) => {\n              return (\n                <Persons\n                persons={contactsToShow}\n                onDelete={deletePerson}\n                />\n              );\n            }\n            )}\n          </Typography>\n        </List>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}