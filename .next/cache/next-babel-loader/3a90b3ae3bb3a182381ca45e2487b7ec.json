{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/FullScreenDialog.tsx\";\nvar __jsx = React.createElement;\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography'; // import CloseIcon from '@material-ui/icons/Close';\n\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1\n  }\n}));\nconst Transition = forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }));\n});\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"My information\"), __jsx(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Sound\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, list.map(i => {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \" onClick=\", _JSON$stringify(i), \"} }\"));\n  }))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/FullScreenDialog.tsx"],"names":["React","forwardRef","makeStyles","Button","Dialog","IconButton","Typography","Slide","useStyles","theme","appBar","position","title","marginLeft","spacing","flex","Transition","props","ref","FullScreenDialog","classes","open","setOpen","useState","handleClickOpen","handleClose","list","map","i"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAOA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,8BAAvB,C,CACA;;AAGA,OAAOC,KAAP,MAAkB,yBAAlB;AAGA,MAAMC,SAAS,GAAGN,UAAU,CAACO,KAAK,KAAK;AACrCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,QAAQ,EAAE;AADJ,GAD6B;AAIrCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,UAAU,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADP;AAELC,IAAAA,IAAI,EAAE;AAFD;AAJ8B,CAAL,CAAN,CAA5B;AAUA,MAAMC,UAAgD,GAAGf,UAAU,CAAC,SAASe,UAAT,CAAoBC,KAApB,EAA2BC,GAA3B,EAAgC;AAClG,SAAO,MAAC,KAAD;AAAO,IAAA,SAAS,EAAC,IAAjB;AAAsB,IAAA,GAAG,EAAEA;AAA3B,KAAoCD,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;AACD,CAFkE,CAAnE;AAIA,eAAe,SAASE,gBAAT,GAA4B;AACzC,QAAMC,OAAO,GAAGZ,SAAS,EAAzB;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBtB,KAAK,CAACuB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5BF,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAG,MAAM;AACxBH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC,SAAjC;AAA2C,IAAA,OAAO,EAAEE,eAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAIE,MAAC,MAAD;AAAQ,IAAA,UAAU,MAAlB;AAAmB,IAAA,IAAI,EAAEH,IAAzB;AAA+B,IAAA,OAAO,EAAEI,WAAxC;AAAqD,IAAA,mBAAmB,EAAET,UAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGM,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAyC,IAAA,OAAO,EAAES,WAAlD;AAA+D,kBAAW,OAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,EAMM,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAEL,OAAO,CAACR,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANN,EAUM,MAAC,UAAD;AAAY,IAAA,OAAO,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCc,IAAI,CAACC,GAAL,CAAUC,CAAD,IAAO;AACf,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAkB,gBAAeA,CAAf,CAAlB,QADF,CADF;AAKD,GANA,CADD,CAVN,CAJF,CADF;AA4BD","sourcesContent":["import React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\n// import CloseIcon from '@material-ui/icons/Close';\n\n\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition: React.ComponentType<TransitionProps> = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        My information\n      </Button>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n    \n   \n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            {/*<CloseIcon />*/}\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sound\n            </Typography>\n           \n            <Typography variant={'h6'}>\n            {list.map((i) => {\n              return (\n                <li>\n                  <Button> onClick={JSON.stringify(i)}} }</Button>\n                </li>\n              );\n            }\n            )}\n          </Typography>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}