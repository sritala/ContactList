{"ast":null,"code":"var _jsxFileName = \"/Users/susanna/Downloads/ContactList/src/components/ui/ShowContacts.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, Box } from '@material-ui/core';\nimport personService from '../services/persons';\nimport ShowContactsBlock from '../ui/ShowContactsBlock';\nconst useStyles = makeStyles(theme => ({\n  dialog: {\n    paddingTop: '1rem'\n  }\n}));\nexport default function ShowContacts() {\n  const classes = useStyles();\n  const {\n    0: persons,\n    1: setPersons\n  } = useState([]);\n  const {\n    0: searchName,\n    1: setSearchName\n  } = useState('');\n  const {\n    0: showAll,\n    1: setShowAll\n  } = useState(true);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const deletePerson = id => {\n    personService.remove(id).then(() => {\n      const updatedPersons = persons.filter(p => p.id !== id);\n      setPersons(updatedPersons);\n    });\n  };\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  };\n\n  const contactsToShow = showAll ? persons : persons.filter(person => {\n    let toFilter = person.name.toLocaleLowerCase();\n    let toSearch = searchName.toLowerCase();\n    return toFilter.includes(toSearch);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(ShowContactsBlock, {\n    contactsToShow: contactsToShow,\n    handleSearchName: handleSearchName,\n    deletePerson: deletePerson,\n    persons: persons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/ContactList/src/components/ui/ShowContacts.tsx"],"names":["React","useState","useEffect","makeStyles","Box","personService","ShowContactsBlock","useStyles","theme","dialog","paddingTop","ShowContacts","classes","persons","setPersons","searchName","setSearchName","showAll","setShowAll","getAll","then","initialPersons","deletePerson","id","remove","updatedPersons","filter","p","handleSearchName","event","target","value","contactsToShow","person","toFilter","name","toLocaleLowerCase","toSearch","toLowerCase","includes"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,mBAAhC;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,iBAAP,MAA8B,yBAA9B;AAEA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAY;AACtCC,EAAAA,MAAM,EAAC;AACNC,IAAAA,UAAU,EAAC;AADL;AAD+B,CAAZ,CAAD,CAA5B;AAMA,eAAe,SAASC,YAAT,GAAyB;AAEtC,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AAEA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACc,UAAD;AAAA,OAAaC;AAAb,MAA8Bf,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM;AAAA,OAACgB,OAAD;AAAA,OAAUC;AAAV,MAAwBjB,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,aAAa,CACVc,MADH,GAEGC,IAFH,CAEQC,cAAc,IAAI;AACtBP,MAAAA,UAAU,CAACO,cAAD,CAAV;AACD,KAJH;AAKD,GANQ,EAMN,EANM,CAAT;;AASA,QAAMC,YAAY,GAAGC,EAAE,IAAI;AACzBlB,IAAAA,aAAa,CACVmB,MADH,CACUD,EADV,EAEGH,IAFH,CAEQ,MAAM;AACV,YAAMK,cAAc,GAAGZ,OAAO,CAACa,MAAR,CAAeC,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAA7B,CAAvB;AACAT,MAAAA,UAAU,CAACW,cAAD,CAAV;AACD,KALH;AAMD,GAPD;;AASA,QAAMG,gBAAgB,GAAGC,KAAK,IAAI;AAChCb,IAAAA,aAAa,CAACa,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAb,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHD;;AAKA,QAAMc,cAAc,GAAGf,OAAO,GAC5BJ,OAD4B,GAE5BA,OAAO,CAACa,MAAR,CAAeO,MAAM,IAAI;AACvB,QAAIC,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYC,iBAAZ,EAAf;AACA,QAAIC,QAAQ,GAAGtB,UAAU,CAACuB,WAAX,EAAf;AACA,WAAOJ,QAAQ,CAACK,QAAT,CAAkBF,QAAlB,CAAP;AACD,GAJD,CAFF;AAQI,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEzB,OAAO,CAACH,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,MAAC,iBAAD;AACA,IAAA,cAAc,EAAEuB,cADhB;AAEA,IAAA,gBAAgB,EAAIJ,gBAFpB;AAGA,IAAA,YAAY,EAAIN,YAHhB;AAIA,IAAA,OAAO,EAAIT,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADF,CADF;AAYL","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles, Box } from '@material-ui/core';\nimport personService from '../services/persons';\nimport ShowContactsBlock from '../ui/ShowContactsBlock';\n\nconst useStyles = makeStyles((theme) => ({\n   dialog:{\n    paddingTop:'1rem',   \n  },\n}));\n\nexport default function ShowContacts () {\n\n  const classes = useStyles();\n\n  const [persons, setPersons] = useState([]);\n  const [searchName, setSearchName] = useState('');\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons);\n      });\n  }, []);\n\n\n  const deletePerson = id => {\n    personService\n      .remove(id)\n      .then(() => {\n        const updatedPersons = persons.filter(p => p.id !== id);\n        setPersons(updatedPersons);\n      })\n  }\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  }\n\n  const contactsToShow = showAll\n  ? persons\n  : persons.filter(person => {\n      let toFilter = person.name.toLocaleLowerCase();\n      let toSearch = searchName.toLowerCase()\n      return toFilter.includes(toSearch);\n    });\n    \n      return (\n        <div>\n          <Box className={classes.dialog}>\n             <ShowContactsBlock\n             contactsToShow={contactsToShow}\n             handleSearchName = {handleSearchName}\n             deletePerson = {deletePerson}\n             persons = {persons}\n             />\n          </Box>\n        </div>\n      );\n}"]},"metadata":{},"sourceType":"module"}