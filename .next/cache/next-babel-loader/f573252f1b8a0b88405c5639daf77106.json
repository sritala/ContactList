{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/Form.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'; //import FullScreenDialog from './FullScreenDialog';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nconst initialInformation = {\n  firstName: '',\n  lastName: '',\n  email: ''\n}; //initialInformation = initialInformation.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\");\n\nexport default function () {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 200\n      }\n    },\n    container: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    save: {\n      paddingTop: '1rem'\n    },\n    item: {},\n    title: {}\n  }));\n  const classes = useStyles();\n  const [values, setValues] = React.useState(initialInformation);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    setList([...list, values]);\n  };\n\n  const Transition = forwardRef(function Transition(props, ref) {\n    return __jsx(Slide, _extends({\n      direction: \"up\",\n      ref: ref\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  });\n  return __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"First name\",\n    value: values.firstName,\n    onChange: handleChange,\n    name: 'firstName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Last name\",\n    value: values.lastName,\n    onChange: handleChange,\n    name: 'lastName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Email\",\n    value: values.email,\n    onChange: handleChange,\n    name: 'email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, \"Save\"))), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"My information\"), __jsx(Dialog, {\n    fullScreen: true,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Sound\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, list.map(i => {\n    return __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, __jsx(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \" onClick=\", _JSON$stringify(i), \"} }\"));\n  })))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/Form.tsx"],"names":["React","useState","forwardRef","makeStyles","TextField","Button","Typography","Grid","IconButton","Dialog","Slide","initialInformation","firstName","lastName","email","useStyles","theme","root","margin","spacing","width","container","flexDirection","alignItems","save","paddingTop","item","title","classes","values","setValues","list","setList","open","setOpen","handleClickOpen","handleClose","handleChange","event","target","name","value","handleOnSubmit","preventDefault","Transition","props","ref","map","i"],"mappings":"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","sourcesContent":["import React, { useState, forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\n//import FullScreenDialog from './FullScreenDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\n\nconst initialInformation = {\n    firstName: '',\n    lastName: '',\n    email: ''\n}\n\n//initialInformation = initialInformation.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\");\n\nexport default function () {\n\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 200,\n          },\n        },\n        container: {\n          flexDirection:'column',\n          alignItems: 'center',\n         \n        },\n        save: {\n         paddingTop:'1rem',\n        },\n        item:{\n\n        },\n        title:{\n\n        }\n\n      }));\n      \n    const classes = useStyles();\n\n    const [values, setValues] = React.useState(initialInformation);\n    const [list, setList] = useState([])\n    const [open, setOpen] = React.useState(false);\n\n    const handleClickOpen = () => {\n      setOpen(true);\n    };\n  \n    const handleClose = () => {\n      setOpen(false);\n    };\n\n    const handleChange = event => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        } as any);\n\n    };\n\n    const handleOnSubmit = (event) => {\n      event.preventDefault()\n      setList([...list, values])\n      }\n\n      const Transition: React.ComponentType<TransitionProps> = forwardRef(function Transition(props, ref) {\n        return <Slide direction=\"up\" ref={ref} {...props} />;\n      });\n\n    return ( \n        <form onSubmit={handleOnSubmit} className={classes.root} noValidate autoComplete=\"off\">\n        <Grid container={true} className={classes.container}>\n          <Grid item={true} className={classes.item}>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"First name\"\n            value={values.firstName}\n            onChange={handleChange}\n            name={'firstName'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.item} >\n          <TextField\n            id=\"standard-textarea\"\n            label=\"Last name\"\n            value={values.lastName}\n            onChange={handleChange}\n            name={'lastName'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.item}>\n           <TextField\n            id=\"standard-textarea\"\n            label=\"Email\"\n            value={values.email}\n            onChange={handleChange}\n            name={'email'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.save}>\n          <Button variant=\"contained\"  color=\"primary\"type=\"submit\">Save</Button>\n          </Grid>\n        </Grid>\n        <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        My information\n      </Button>\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            {/*<CloseIcon />*/}\n            </IconButton>\n            <Typography variant=\"h6\" className={classes.title}>\n              Sound\n            </Typography>\n            <Typography variant={'h6'}>\n            {list.map((i) => {\n              return (\n                <li>\n                  <Button> onClick={JSON.stringify(i)}} }</Button>\n                </li>\n              );\n            }\n            )}\n          </Typography>\n      </Dialog>\n    </div>\n      </form>\n    )\n}"]},"metadata":{},"sourceType":"module"}