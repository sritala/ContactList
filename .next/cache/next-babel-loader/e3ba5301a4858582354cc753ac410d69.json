{"ast":null,"code":"var _jsxFileName = \"/Users/susanna/Downloads/ContactList/src/pages/ShowContacts.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport Box from '@material-ui/core/Box';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport personService from '../components/ui/Persons';\nconst useStyles = makeStyles(() => ({\n  wrapper: {},\n  form: {\n    textAlign: 'center'\n  }\n}));\n\nfunction ShowContacts() {\n  const classes = useStyles();\n  const {\n    0: persons,\n    1: setPersons\n  } = useState([]);\n  const {\n    0: showAll,\n    1: setShowAll\n  } = useState(true);\n  const {\n    0: searchName,\n    1: setSearchName\n  } = useState('');\n  const contactsToShow = showAll ? persons : persons.filter(person => {\n    let toFilter = person.name.toLocaleLowerCase();\n    let toSearch = searchName.toLowerCase();\n    return toFilter.includes(toSearch);\n  });\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  };\n\n  const deletePerson = id => {\n    personService.remove(id).then(() => {\n      const updatedPersons = persons.filter(p => p.id !== id);\n      setPersons(updatedPersons);\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: classes.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.form,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h5\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Your Contacts\"), __jsx(Persons, {\n    persons: contactsToShow,\n    onDelete: deletePerson,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })));\n}\n\nexport default ShowContacts;","map":{"version":3,"sources":["/Users/susanna/Downloads/ContactList/src/pages/ShowContacts.tsx"],"names":["React","useState","Box","Typography","makeStyles","personService","useStyles","wrapper","form","textAlign","ShowContacts","classes","persons","setPersons","showAll","setShowAll","searchName","setSearchName","contactsToShow","filter","person","toFilter","name","toLocaleLowerCase","toSearch","toLowerCase","includes","handleSearchName","event","target","value","deletePerson","id","remove","then","updatedPersons","p"],"mappings":";;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAAC,OAAO;AAChCG,EAAAA,OAAO,EAAE,EADuB;AAIhCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAC;AADR;AAJ0B,CAAP,CAAD,CAA5B;;AAUA,SAASC,YAAT,GAAwB;AACpB,QAAMC,OAAO,GAAGL,SAAS,EAAzB;AACA,QAAM;AAAA,OAACM,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBd,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM;AAAA,OAACe,UAAD;AAAA,OAAaC;AAAb,MAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMiB,cAAc,GAAGJ,OAAO,GAC5BF,OAD4B,GAE5BA,OAAO,CAACO,MAAR,CAAeC,MAAM,IAAI;AACvB,QAAIC,QAAQ,GAAGD,MAAM,CAACE,IAAP,CAAYC,iBAAZ,EAAf;AACA,QAAIC,QAAQ,GAAGR,UAAU,CAACS,WAAX,EAAf;AACA,WAAOJ,QAAQ,CAACK,QAAT,CAAkBF,QAAlB,CAAP;AACD,GAJD,CAFF;;AAQA,QAAMG,gBAAgB,GAAGC,KAAK,IAAI;AAC9BX,IAAAA,aAAa,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACAf,IAAAA,UAAU,CAAC,KAAD,CAAV;AACD,GAHH;;AAKE,QAAMgB,YAAY,GAAGC,EAAE,IAAI;AACzB3B,IAAAA,aAAa,CACV4B,MADH,CACUD,EADV,EAEGE,IAFH,CAEQ,MAAM;AACV,YAAMC,cAAc,GAAGvB,OAAO,CAACO,MAAR,CAAeiB,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASA,EAA7B,CAAvB;AACAnB,MAAAA,UAAU,CAACsB,cAAD,CAAV;AACD,KALH;AAMD,GAPD;;AAUF,SACI;AAAK,IAAA,SAAS,EAAExB,OAAO,CAACJ,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,SAAS,EAAEI,OAAO,CAACH,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,MAAC,OAAD;AACC,IAAA,OAAO,EAAEU,cADV;AAEC,IAAA,QAAQ,EAAEa,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,CADJ;AAWH;;AAED,eAAerB,YAAf","sourcesContent":["\nimport React, {useState} from 'react';\nimport Box from '@material-ui/core/Box'\nimport { Typography, makeStyles } from '@material-ui/core';\nimport personService from '../components/ui/Persons';\n\nconst useStyles = makeStyles(() => ({\n    wrapper: {\n    \n    },\n    form: {\n        textAlign:'center'\n    },\n    \n}));\n\nfunction ShowContacts() {\n    const classes = useStyles();\n    const [persons, setPersons] = useState([]);\n    const [showAll, setShowAll] = useState(true);\n    const [searchName, setSearchName] = useState('');\n\n    const contactsToShow = showAll\n    ? persons\n    : persons.filter(person => {\n        let toFilter = person.name.toLocaleLowerCase();\n        let toSearch = searchName.toLowerCase()\n        return toFilter.includes(toSearch);\n      });\n\n    const handleSearchName = event => {\n        setSearchName(event.target.value);\n        setShowAll(false);\n      }\n\n      const deletePerson = id => {\n        personService\n          .remove(id)\n          .then(() => {\n            const updatedPersons = persons.filter(p => p.id !== id);\n            setPersons(updatedPersons);\n          })\n      }\n\n\n    return (  \n        <div className={classes.wrapper}> \n            <Box className={classes.form}>\n                <Typography variant='h5' color='primary'>Your Contacts</Typography>\n                <Persons\n                 persons={contactsToShow}\n                 onDelete={deletePerson}\n                />\n            </Box>\n        </div>\n    )\n}\n\nexport default ShowContacts;"]},"metadata":{},"sourceType":"module"}