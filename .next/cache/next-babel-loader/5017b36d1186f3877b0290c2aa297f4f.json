{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/Form.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport FullScreenDialog from './FullScreenDialog';\nconst initialInformation = {\n  firstName: '',\n  lastName: '',\n  email: ''\n}; //initialInformation = initialInformation.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\");\n\nexport default function () {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 300\n      }\n    },\n    container: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    save: {\n      paddingTop: '1rem'\n    },\n    dialog: {\n      paddingTop: '1rem'\n    },\n    item: {}\n  }));\n  const classes = useStyles();\n  const [values, setValues] = React.useState(initialInformation);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    setList([...list, values]);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"First name\",\n    value: values.firstName,\n    onChange: handleChange,\n    name: 'firstName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Last name\",\n    value: values.lastName,\n    onChange: handleChange,\n    name: 'lastName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Email\",\n    value: values.email,\n    onChange: handleChange,\n    name: 'email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), __jsx(Box, {\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 200\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Save\")), __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 200\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Cancel\"))))), __jsx(Box, {\n    className: classes.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, __jsx(FullScreenDialog, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/Form.tsx"],"names":["React","useState","makeStyles","TextField","Button","Grid","Box","FullScreenDialog","initialInformation","firstName","lastName","email","useStyles","theme","root","margin","spacing","width","container","flexDirection","alignItems","save","paddingTop","dialog","item","classes","values","setValues","list","setList","handleChange","event","target","name","value","handleOnSubmit","preventDefault","buttons"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid'\nimport Box from '@material-ui/core/Box'\nimport FullScreenDialog from './FullScreenDialog';\n\nconst initialInformation = {\n    firstName: '',\n    lastName: '',\n    email: ''\n}\n\n//initialInformation = initialInformation.replace(/\\\"([^(\\\")\"]+)\\\":/g,\"$1:\");\n\nexport default function () {\n\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 300,\n          },\n        },\n        container: {\n          flexDirection:'column',\n          alignItems: 'center',\n          \n        },\n        save: {\n         paddingTop:'1rem',\n         \n        },\n        dialog:{\n          paddingTop:'1rem',   \n        },\n        item:{\n\n        },\n        \n\n      }));\n      \n    const classes = useStyles();\n\n    const [values, setValues] = React.useState(initialInformation);\n    const [list, setList] = useState([])\n\n    const handleChange = event => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        } as any);\n\n    };\n\n    const handleOnSubmit = (event) => {\n      event.preventDefault()\n      setList([...list, values])\n      }\n\n    return ( \n      <div>\n        <form onSubmit={handleOnSubmit} className={classes.root} noValidate autoComplete=\"off\">\n        <Grid container={true} className={classes.container}>\n          <Grid item={true} className={classes.item}>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"First name\"\n            value={values.firstName}\n            onChange={handleChange}\n            name={'firstName'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.item} >\n          <TextField\n            id=\"standard-textarea\"\n            label=\"Last name\"\n            value={values.lastName}\n            onChange={handleChange}\n            name={'lastName'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.item}>\n           <TextField\n            id=\"standard-textarea\"\n            label=\"Email\"\n            value={values.email}\n            onChange={handleChange}\n            name={'email'}\n          />\n          </Grid>\n          <Box className={classes.buttons}>\n            <Grid item={true} className={classes.save}>\n              <Button style={{width:200}} variant=\"contained\"  color=\"primary\"type=\"submit\">Save</Button>\n            </Grid>\n            <Grid item={true} className={classes.save}>\n              <Button style={{width:200}} variant=\"contained\"  color=\"primary\"type=\"submit\">Cancel</Button>\n            </Grid>\n          </Box>\n          \n\n\n        </Grid>\n\n\n      </form>\n      <Box className={classes.dialog}>\n          <FullScreenDialog/>\n      </Box>\n      </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}