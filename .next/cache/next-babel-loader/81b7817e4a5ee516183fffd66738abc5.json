{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/FullScreenDialog.tsx\";\nvar __jsx = React.createElement;\nimport React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Slide from '@material-ui/core/Slide';\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative'\n  },\n  title: {\n    textAlign: 'center',\n    padding: '1rem'\n  },\n  item: {},\n  ul: {\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem'\n  },\n  dialog: {\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  li: {},\n  open: {\n    width: 320\n  }\n}));\nconst Transition = forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }));\n});\nexport default function FullScreenDialog({\n  list,\n  values\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Show Information\"), __jsx(Dialog, {\n    className: classes.dialog,\n    open: open,\n    onClose: handleClose,\n    TransitionComponent: Transition,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, __jsx(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, __jsx(Toolbar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    color: \"inherit\",\n    onClick: handleClose,\n    \"aria-label\": \"close\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(CloseIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })))), __jsx(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"My information\"), __jsx(Typography, {\n    variant: 'h6',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, list.map(i => {\n    return __jsx(\"ul\", {\n      className: classes.ul,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      className: classes.li,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(Grid, {\n      item: true,\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"standard-multiline-flexible\",\n      label: \"First name\",\n      value: values.firstName,\n      name: 'firstName',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"standard-textarea\",\n      label: \"Last name\",\n      value: values.lastName,\n      name: 'lastName',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), __jsx(Grid, {\n      item: true,\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, __jsx(TextField, {\n      id: \"standard-textarea\",\n      label: \"Email\",\n      value: values.email,\n      name: 'email',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))));\n  })))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/exercise copy /exercise/src/components/ui/FullScreenDialog.tsx"],"names":["React","forwardRef","makeStyles","Button","Dialog","List","AppBar","Toolbar","IconButton","Typography","TextField","Grid","CloseIcon","Slide","useStyles","theme","appBar","position","title","textAlign","padding","item","ul","paddingTop","display","justifyContent","listStyle","paddingLeft","paddingRight","paddingBottom","dialog","maxWidth","height","li","open","width","Transition","props","ref","FullScreenDialog","list","values","classes","setOpen","useState","handleClickOpen","handleClose","map","i","firstName","lastName","email"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport List from '@material-ui/core/List';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nimport Slide from '@material-ui/core/Slide';\nimport { TransitionProps } from '@material-ui/core/transitions/transition';\n\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    textAlign:'center',\n    padding: '1rem',\n  },\n  item:{\n\n  },\n  ul:{\n    paddingTop: 10,\n    display: 'flex',\n    justifyContent: 'center',\n    listStyle: 'none',\n    paddingLeft: '8rem',\n    paddingRight: '8rem',\n    paddingBottom: '2rem',\n  },\n  dialog:{\n    maxWidth: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent:'center'\n  },\n  li:{\n\n  },\n  open:{\n    width: 320,\n\n  },\n}));\n\nconst Transition: React.ComponentType<TransitionProps> = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\ninterface OwnProps {\n  list: any[];\n  values: any;\n}\n\ntype Props = OwnProps; \n\n\nexport default function FullScreenDialog({ list, values }: Props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Typography variant=\"h6\" className={classes.title}>or</Typography>\n      <Button className={classes.open} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Show Information\n      </Button>\n\n      \n      <Dialog className={classes.dialog} open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppBar className={classes.appBar}>\n          <Toolbar>\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n            <CloseIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n        <List>\n        <Typography variant=\"h6\" className={classes.title}>\n          My information\n        </Typography>\n        <Typography variant={'h6'}>\n            {list.map((i) => {\n              return (\n                <ul className={classes.ul}>\n                  <li className={classes.li}>\n                  <Grid item={true} className={classes.item}>\n                    <TextField\n                    id=\"standard-multiline-flexible\"\n                    label=\"First name\"\n                    value={values.firstName}\n                    name={'firstName'}\n                    />\n                  </Grid>\n                  <Grid item={true} className={classes.item} >\n                  <TextField\n                    id=\"standard-textarea\"\n                    label=\"Last name\"\n                    value={values.lastName}\n                    name={'lastName'}\n                  />\n                  </Grid>\n                  <Grid item={true} className={classes.item}>\n                  <TextField\n                    id=\"standard-textarea\"\n                    label=\"Email\"\n                    value={values.email}\n                    name={'email'}\n                  />\n                  </Grid>\n                  </li>\n                </ul>\n              );\n            }\n            )}\n          </Typography>\n        </List>\n      </Dialog>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}