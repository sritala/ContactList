{"ast":null,"code":"var _jsxFileName = \"/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Form.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport Dialog from './Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nconst initialInformation = {\n  firstName: '',\n  lastName: '',\n  email: ''\n};\nexport default function () {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: 300\n      }\n    },\n    container: {\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    save: {\n      paddingTop: '1rem'\n    },\n    dialog: {\n      paddingTop: '1rem'\n    },\n    item: {},\n    buttons: {\n      display: 'flex',\n      flexDirection: 'row',\n      justifyContent: 'center',\n      paddingTop: '1rem'\n    },\n    box: {\n      textAlign: 'center'\n    }\n  }));\n  const classes = useStyles();\n  const [values, setValues] = React.useState(initialInformation);\n  const {\n    0: list,\n    1: setList\n  } = useState([]);\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    setValues(_objectSpread({}, values, {\n      [event.target.name]: event.target.value\n    }));\n  };\n\n  const handleOnSubmit = event => {\n    event.preventDefault();\n    setList([...list, values]);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, __jsx(Box, {\n    className: classes.box,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, __jsx(Typography, {\n    variant: \"body1\",\n    style: {\n      color: '#949494'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"or\"), __jsx(Button, {\n    className: classes.open,\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Show Information\")), __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"First name\",\n    value: values.firstName,\n    onChange: handleChange,\n    name: 'firstName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Last name\",\n    value: values.lastName,\n    onChange: handleChange,\n    name: 'lastName',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-textarea\",\n    label: \"Email\",\n    value: values.email,\n    onChange: handleChange,\n    name: 'email',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  })), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 180,\n      height: '3rem'\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"Save\")), __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 100,\n      height: '3rem'\n    },\n    variant: \"contained\",\n    color: \"secondary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \"Cancel\")))), __jsx(Box, {\n    className: classes.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, __jsx(Dialog, {\n    list: list,\n    values: values,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }))));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/SimpleNext.js-project/src/components/ui/Form.tsx"],"names":["React","useState","Typography","makeStyles","Dialog","TextField","Button","Grid","Box","initialInformation","firstName","lastName","email","useStyles","theme","root","margin","spacing","width","container","flexDirection","alignItems","save","paddingTop","dialog","item","buttons","display","justifyContent","box","textAlign","classes","values","setValues","list","setList","open","setOpen","handleChange","event","target","name","value","handleOnSubmit","preventDefault","handleClickOpen","handleClose","color","height"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Typography, makeStyles } from '@material-ui/core';\nimport Dialog from './Dialog';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\n\n\nconst initialInformation = {\n    firstName: '',\n    lastName: '',\n    email: ''\n}\n\nexport default function () {\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n          '& .MuiTextField-root': {\n            margin: theme.spacing(1),\n            width: 300,\n          },\n        },\n        container: {\n          flexDirection:'column',\n          alignItems: 'center',\n          \n        },\n        save: {\n         paddingTop:'1rem',\n         \n        },\n        dialog:{\n          paddingTop:'1rem',   \n        },\n        item:{\n\n        },\n        buttons:{\n          display: 'flex',\n          flexDirection: 'row',\n          justifyContent:'center',\n          paddingTop:'1rem',  \n        },\n        box:{\n          textAlign: 'center',\n       \n        },\n\n      }));\n      \n    const classes = useStyles();\n\n    const [values, setValues] = React.useState(initialInformation);\n    const [list, setList] = useState([]);\n    const [open, setOpen] = React.useState(false);\n\n    const handleChange = event => {\n        setValues({\n            ...values,\n            [event.target.name]: event.target.value\n        } as any);\n\n    };\n\n    const handleOnSubmit = (event) => {\n      event.preventDefault()\n      setList([...list, values])\n      }\n\n      const handleClickOpen = () => {\n        setOpen(true);\n      };\n    \n      const handleClose = () => {\n        setOpen(false);\n      };\n\n    return ( \n      <div>\n        <Box className={classes.box}>\n          <Typography variant=\"body1\" style={{color: '#949494'}}>or</Typography>\n        <Button className={classes.open} variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n          Show Information\n        </Button>\n        </Box>\n        <form onSubmit={handleOnSubmit} className={classes.root} noValidate autoComplete=\"off\">\n        <Grid container={true} className={classes.container}>\n          <Grid item={true} className={classes.item}>\n          <TextField\n            id=\"standard-multiline-flexible\"\n            label=\"First name\"\n            value={values.firstName}\n            onChange={handleChange}\n            name={'firstName'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.item} >\n          <TextField\n            id=\"standard-textarea\"\n            label=\"Last name\"\n            value={values.lastName}\n            onChange={handleChange}\n            name={'lastName'}\n          />\n          </Grid>\n          <Grid item={true} className={classes.item}>\n           <TextField\n            id=\"standard-textarea\"\n            label=\"Email\"\n            value={values.email}\n            onChange={handleChange}\n            name={'email'}\n          />\n          </Grid>\n          <Grid container={true} spacing={1} className={classes.buttons}>\n            <Grid item={true} className={classes.save}>\n              <Button style={{width:180, height: '3rem'}}variant=\"contained\"  color=\"primary\"type=\"submit\">Save</Button>\n            </Grid>\n            <Grid item={true} className={classes.save}>\n              <Button style={{width:100, height: '3rem'}} variant=\"contained\" color=\"secondary\" type=\"submit\">Cancel</Button>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Box className={classes.dialog}>\n          <Dialog list={list} values={values}/>\n        </Box>\n      </form> \n    </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}