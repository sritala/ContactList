{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/susanna/Downloads/ContactList/src/components/ui/Form.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, makeStyles, Box } from \"@material-ui/core\";\nimport Dialog from \"./Dialog\";\nimport personService from \"../services/persons\";\nimport Notification from \"./Notification\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 300\n    }\n  },\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  dialog: {\n    paddingTop: \"1rem\"\n  },\n  save: {\n    paddingTop: \"1rem\"\n  },\n  dialog: {\n    paddingTop: \"1rem\"\n  },\n  item: {},\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingTop: \"1rem\"\n  }\n}));\nexport default function () {\n  const classes = useStyles();\n  const {\n    0: persons,\n    1: setPersons\n  } = useState([]);\n  const {\n    0: newName,\n    1: setNewName\n  } = useState(\"\");\n  const {\n    0: newNumber,\n    1: setNewNumber\n  } = useState(\"\");\n  const {\n    0: searchName,\n    1: setSearchName\n  } = useState(\"\");\n  const {\n    0: showAll,\n    1: setShowAll\n  } = useState(true);\n  const {\n    0: notificationMessage,\n    1: setNotificationMessage\n  } = useState(null);\n  const {\n    0: errorMessage,\n    1: setErrorMessage\n  } = useState(null);\n  useEffect(() => {\n    personService.getAll().then(initialPersons => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const personIsAdded = (name, data) => {\n    let isAdded = data.find(el => el.name === name);\n\n    if (isAdded === undefined) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const addContact = event => {\n    event.preventDefault(); // Check if the contact already exists\n\n    const toUpdate = persons.filter(p => {\n      return p.name.includes(newName);\n    });\n\n    if (toUpdate.length === 1) {\n      const confirm = window.confirm(\"\".concat(newName, \" is already added to Contact List, replace the old number with a new one?\"));\n\n      if (confirm) {\n        personService.update(toUpdate[0].id, _objectSpread({}, toUpdate[0], {\n          number: newNumber\n        })).then(updatedPerson => {\n          let updatedState = persons.filter(p => p.id !== updatedPerson.id);\n          updatedState = [...updatedState, updatedPerson];\n          setPersons(updatedState);\n          setNewName(\"\");\n          setNewNumber(\"\");\n          setNotificationMessage(\"Added \".concat(updatedPerson.name));\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 2000);\n        }).catch(error => {\n          setErrorMessage(\"Information of \".concat(newName, \" has already been removed from server\"));\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      // if not, save the person\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1\n      };\n      personService.create(personObject).then(returnedNote => {\n        if (personIsAdded(newName, persons)) {\n          alert(\"\".concat(newName, \" is already added to Contact List\"));\n        } else {\n          setPersons([...persons, {\n            name: newName,\n            number: newNumber\n          }]);\n        }\n\n        setNotificationMessage(\"Added \".concat(newName));\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 2000);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }).catch(error => {\n        setErrorMessage(\"Information of \".concat(newName, \" has already been removed from server\"));\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  const handleNameChange = event => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = event => {\n    setNewNumber(event.target.value);\n  };\n\n  const cancel = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deletePerson = id => {\n    personService.remove(id).then(() => {\n      const updatedPersons = persons.filter(p => p.id !== id);\n      setPersons(updatedPersons);\n    });\n  };\n\n  const handleSearchName = event => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  };\n\n  const contactsToShow = showAll ? persons : persons.filter(person => {\n    let toFilter = person.name.toLocaleLowerCase();\n    let toSearch = searchName.toLowerCase();\n    return toFilter.includes(toSearch);\n  });\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  }, __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"filled-basic\",\n    label: \"Name\",\n    value: newName,\n    onChange: handleNameChange,\n    name: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181\n    },\n    __self: this\n  })), __jsx(Grid, {\n    item: true,\n    className: classes.item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, __jsx(TextField, {\n    id: \"standard-multiline-flexible\",\n    label: \"Number\",\n    value: newNumber,\n    onChange: handleNumberChange,\n    name: \"number\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))), __jsx(Grid, {\n    container: true,\n    spacing: 1,\n    className: classes.buttons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199\n    },\n    __self: this\n  }, __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 180,\n      height: \"3rem\"\n    },\n    variant: \"contained\",\n    color: \"primary\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201\n    },\n    __self: this\n  }, \"Add\")), __jsx(Grid, {\n    item: true,\n    className: classes.save,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210\n    },\n    __self: this\n  }, __jsx(Button, {\n    style: {\n      width: 100,\n      height: \"3rem\"\n    },\n    variant: \"contained\",\n    onClick: cancel,\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  }, \"Cancel\")))))), __jsx(Box, {\n    className: classes.dialog,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224\n    },\n    __self: this\n  }, __jsx(Dialog, {\n    contactsToShow: contactsToShow,\n    handleSearchName: handleSearchName,\n    deletePerson: deletePerson,\n    persons: persons,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  })), __jsx(Notification, {\n    type: \"error\",\n    message: errorMessage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/susanna/Downloads/ContactList/src/components/ui/Form.tsx"],"names":["React","useState","useEffect","Grid","makeStyles","Box","Dialog","personService","Notification","TextField","Button","useStyles","theme","root","margin","spacing","width","container","flexDirection","alignItems","dialog","paddingTop","save","item","buttons","display","justifyContent","classes","persons","setPersons","newName","setNewName","newNumber","setNewNumber","searchName","setSearchName","showAll","setShowAll","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","getAll","then","initialPersons","personIsAdded","name","data","isAdded","find","el","undefined","addContact","event","preventDefault","toUpdate","filter","p","includes","length","confirm","window","update","id","number","updatedPerson","updatedState","setTimeout","catch","error","personObject","create","returnedNote","alert","handleNameChange","target","value","handleNumberChange","cancel","deletePerson","remove","updatedPersons","handleSearchName","contactsToShow","person","toFilter","toLocaleLowerCase","toSearch","toLowerCase","handleOnSubmit","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, makeStyles, Box } from \"@material-ui/core\";\nimport Dialog from \"./Dialog\";\nimport personService from \"../services/persons\";\nimport PersonForm from \"./PersonForm\";\nimport Notification from \"./Notification\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 300,\n    },\n  },\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  dialog: {\n    paddingTop: \"1rem\",\n  },\n  save: {\n    paddingTop: \"1rem\",\n  },\n  dialog: {\n    paddingTop: \"1rem\",\n  },\n  item: {\n    \n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingTop: \"1rem\",\n  },\n}));\n\nexport default function () {\n  const classes = useStyles();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const personIsAdded = (name, data) => {\n    let isAdded = data.find((el) => el.name === name);\n    if (isAdded === undefined) {\n      return false;\n    }\n    return true;\n  };\n\n  const addContact = (event) => {\n    event.preventDefault();\n    // Check if the contact already exists\n    const toUpdate = persons.filter((p) => {\n      return p.name.includes(newName);\n    });\n    if (toUpdate.length === 1) {\n      const confirm = window.confirm(\n        `${newName} is already added to Contact List, replace the old number with a new one?`\n      );\n      if (confirm) {\n        personService\n          .update(toUpdate[0].id, {\n            ...toUpdate[0],\n            number: newNumber,\n          })\n          .then((updatedPerson) => {\n            let updatedState = persons.filter((p) => p.id !== updatedPerson.id);\n            updatedState = [...updatedState, updatedPerson];\n            setPersons(updatedState);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setNotificationMessage(`Added ${updatedPerson.name}`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 2000);\n          })\n          .catch((error) => {\n            setErrorMessage(\n              `Information of ${newName} has already been removed from server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      // if not, save the person\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1,\n      };\n\n      personService\n        .create(personObject)\n        .then((returnedNote) => {\n          if (personIsAdded(newName, persons)) {\n            alert(`${newName} is already added to Contact List`);\n          } else {\n            setPersons([...persons, { name: newName, number: newNumber }]);\n          }\n          setNotificationMessage(`Added ${newName}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 2000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `Information of ${newName} has already been removed from server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const cancel = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deletePerson = (id) => {\n    personService.remove(id).then(() => {\n      const updatedPersons = persons.filter((p) => p.id !== id);\n      setPersons(updatedPersons);\n    });\n  };\n\n  const handleSearchName = (event) => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  };\n\n  const contactsToShow = showAll\n    ? persons\n    : persons.filter((person) => {\n        let toFilter = person.name.toLocaleLowerCase();\n        let toSearch = searchName.toLowerCase();\n        return toFilter.includes(toSearch);\n      });\n\n  return (\n    <div>\n      <Grid container={true}>\n        <Grid item={true}>\n          <form\n            onSubmit={handleOnSubmit}\n            className={classes.root}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <Grid container={true} className={classes.container}>\n              <Grid item={true} className={classes.item}>\n                <TextField\n                  id=\"filled-basic\"\n                  label=\"Name\"\n                  value={newName}\n                  onChange={handleNameChange}\n                  name={\"name\"}\n                />\n              </Grid>\n              <Grid item={true} className={classes.item}>\n                <TextField\n                  id=\"standard-multiline-flexible\"\n                  label=\"Number\"\n                  value={newNumber}\n                  onChange={handleNumberChange}\n                  name={\"number\"}\n                />\n              </Grid>\n            </Grid>\n            <Grid container={true} spacing={1} className={classes.buttons}>\n              <Grid item={true} className={classes.save}>\n                <Button\n                  style={{ width: 180, height: \"3rem\" }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  Add\n                </Button>\n              </Grid>\n              <Grid item={true} className={classes.save}>\n                <Button\n                  style={{ width: 100, height: \"3rem\" }}\n                  variant=\"contained\"\n                  onClick={cancel}\n                  color=\"secondary\"\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n      <Box className={classes.dialog}>\n        <Dialog\n          contactsToShow={contactsToShow}\n          handleSearchName={handleSearchName}\n          deletePerson={deletePerson}\n          persons={persons}\n        />\n      </Box>\n      <Notification type={\"error\"} message={errorMessage} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}