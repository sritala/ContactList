{"version":3,"file":"static/webpack/static/development/pages/AddContact.js.362414e87ae301471130.hot-update.js","sources":["webpack:///./src/components/ui/Form.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Typography, Grid, makeStyles, Box } from \"@material-ui/core\";\nimport Dialog from \"./Dialog\";\nimport personService from \"../services/persons\";\nimport PersonForm from \"./PersonForm\";\nimport Notification from \"./Notification\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: 300,\n    },\n  },\n  container: {\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  dialog: {\n    paddingTop: \"1rem\",\n  },\n  save: {\n    paddingTop: \"1rem\",\n  },\n  dialog: {\n    paddingTop: \"1rem\",\n  },\n  item: {\n    \n  },\n  buttons: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    paddingTop: \"1rem\",\n  },\n}));\n\nexport default function () {\n  const classes = useStyles();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchName, setSearchName] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    personService.getAll().then((initialPersons) => {\n      setPersons(initialPersons);\n    });\n  }, []);\n\n  const personIsAdded = (name, data) => {\n    let isAdded = data.find((el) => el.name === name);\n    if (isAdded === undefined) {\n      return false;\n    }\n    return true;\n  };\n\n  const addContact = (event) => {\n    event.preventDefault();\n    // Check if the contact already exists\n    const toUpdate = persons.filter((p) => {\n      return p.name.includes(newName);\n    });\n    if (toUpdate.length === 1) {\n      const confirm = window.confirm(\n        `${newName} is already added to Contact List, replace the old number with a new one?`\n      );\n      if (confirm) {\n        personService\n          .update(toUpdate[0].id, {\n            ...toUpdate[0],\n            number: newNumber,\n          })\n          .then((updatedPerson) => {\n            let updatedState = persons.filter((p) => p.id !== updatedPerson.id);\n            updatedState = [...updatedState, updatedPerson];\n            setPersons(updatedState);\n            setNewName(\"\");\n            setNewNumber(\"\");\n            setNotificationMessage(`Added ${updatedPerson.name}`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 2000);\n          })\n          .catch((error) => {\n            setErrorMessage(\n              `Information of ${newName} has already been removed from server`\n            );\n            setTimeout(() => {\n              setErrorMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      // if not, save the person\n      const personObject = {\n        name: newName,\n        number: newNumber,\n        id: persons.length + 1,\n      };\n\n      personService\n        .create(personObject)\n        .then((returnedNote) => {\n          if (personIsAdded(newName, persons)) {\n            alert(`${newName} is already added to Contact List`);\n          } else {\n            setPersons([...persons, { name: newName, number: newNumber }]);\n          }\n          setNotificationMessage(`Added ${newName}`);\n          setTimeout(() => {\n            setNotificationMessage(null);\n          }, 2000);\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((error) => {\n          setErrorMessage(\n            `Information of ${newName} has already been removed from server`\n          );\n          setTimeout(() => {\n            setErrorMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const cancel = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const deletePerson = (id) => {\n    personService.remove(id).then(() => {\n      const updatedPersons = persons.filter((p) => p.id !== id);\n      setPersons(updatedPersons);\n    });\n  };\n\n  const handleSearchName = (event) => {\n    setSearchName(event.target.value);\n    setShowAll(false);\n  };\n\n  const contactsToShow = showAll\n    ? persons\n    : persons.filter((person) => {\n        let toFilter = person.name.toLocaleLowerCase();\n        let toSearch = searchName.toLowerCase();\n        return toFilter.includes(toSearch);\n      });\n\n  return (\n    <div>\n      <Grid container={true}>\n        <Grid item={true}>\n          <form\n            onSubmit={handleOnSubmit}\n            className={classes.root}\n            noValidate\n            autoComplete=\"off\"\n          >\n            <Grid container={true} className={classes.container}>\n              <Grid item={true} className={classes.item}>\n                <TextField\n                  id=\"filled-basic\"\n                  label=\"Name\"\n                  value={newName}\n                  onChange={handleNameChange}\n                  name={\"name\"}\n                />\n              </Grid>\n              <Grid item={true} className={classes.item}>\n                <TextField\n                  id=\"standard-multiline-flexible\"\n                  label=\"Number\"\n                  value={newNumber}\n                  onChange={handleNumberChange}\n                  name={\"number\"}\n                />\n              </Grid>\n            </Grid>\n            <Grid container={true} spacing={1} className={classes.buttons}>\n              <Grid item={true} className={classes.save}>\n                <Button\n                  style={{ width: 180, height: \"3rem\" }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  Add\n                </Button>\n              </Grid>\n              <Grid item={true} className={classes.save}>\n                <Button\n                  style={{ width: 100, height: \"3rem\" }}\n                  variant=\"contained\"\n                  onClick={cancel}\n                  color=\"secondary\"\n                >\n                  Cancel\n                </Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Grid>\n      </Grid>\n      <Box className={classes.dialog}>\n        <Dialog\n          contactsToShow={contactsToShow}\n          handleSearchName={handleSearchName}\n          deletePerson={deletePerson}\n          persons={persons}\n        />\n      </Box>\n      <Notification type={\"error\"} message={errorMessage} />\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AADA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAJA;AAvBA;AA+BA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAGA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAHA;AAMA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}